name: Run Tests and Check Coverage

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest   # Usado para execução no Linux
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]  # Definindo os sistemas operacionais para o teste
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'  # Use a versão do Node.js que você está utilizando

      - name: Install dependencies
        run: npm install  # Instala as dependências no diretório ./back
        working-directory: ./back  # Define o diretório correto para execução do npm install

      - name: Run tests with coverage
        run: npm run test -- --coverage  # Execute seus testes com cobertura
        working-directory: ./back  # Define o diretório correto para execução dos testes

      - name: Check coverage threshold
        run: |
          COVERAGE=$(cat coverage/coverage-summary.json | jq .total.statements.pct)
          if (( $(echo "$COVERAGE < 70" | bc -l) )); then
            echo "Test coverage is below 70%. Coverage is $COVERAGE%."
            exit 1  # Interrompe a execução se a cobertura for menor que 70%
          fi
          echo "Test coverage is sufficient: $COVERAGE%"
        working-directory: ./back  # Define o diretório correto para verificar a cobertura

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Vitor-Git15/todo-app
          files: ./coverage/coverage-summary.json  # Caminho do arquivo de cobertura
          fail_ci_if_error: true  # Faz a CI falhar se o upload falhar
